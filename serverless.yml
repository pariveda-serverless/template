# TODO: Update Serverless service name
# NOTE: Service name must match the repository name, but replace all '.' with '-' (this is a restriction of Cloudformation naming conventions)
service: my-new-service

# DO NOT MODIFY!!!
plugins:
  - serverless-offline
  - serverless-enable-api-logs

# DO NOT MODIFY!!!
provider:
  name: aws
  runtime: nodejs4.3
  stage: ${opt:stage}
  # NOTE: Codebuild passes the lambda role from the security stack to the serverless deploy command in the live CI/CD pipeline
  role: ${opt:lambdaRoleARN}

# NOTE: You can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

# TODO: Add Lambda Function definitions here
functions:
  hello:
    handler: handler.hello

#    EXAMPLE: Event definitions that can trigger your Lambda Functions
#    NOTE: Please make sure to change your handler code to work with chosen events
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"

#    EXAMPLE: Define function environment variables here
#    environment:
#      variable2: value2


# TODO: Add CloudFormation resources here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"

